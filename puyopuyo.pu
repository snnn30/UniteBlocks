@startuml hoge
class BoardController{
    {static} +Vector2Int START_POS
    {static} +int MAX_HEIGHT
    +bool CanSettle(Vector2Int pos) 
    +bool Settle(Vector2Int pos, PuyoType puyoType)
    +void DropToBottom()
}
class PuyoController{
    +PuyoType : PuyoType
}
class PuyoCollerTable{
    +SerializableDictionary<PuyoType, Color> PuyoColooers
}
class SerializableDictionary
enum PuyoType

class PlayerRotate
class PlayerMove
class PlayerDrop
class PlayerState{
    +Vector2Int Position
    +Direction Rotation    
    +bool IsAcceptingInput
    +List<Tween> ActiveTweens
    +PuyoController[] PuyoControllers
    +void GroundingProcess()
    +bool CanSet(Vector2Int pos, Directoin rot)
}
enum Direction
class WatingPuyos{
    +PuyoController[] GetNextPuyos()
}

class GameManager{
    +void OnGameOver()
}

BoardController --> PuyoController
BoardController ..> PuyoType
PuyoController --> PuyoCollerTable
PuyoController --> PuyoType
PuyoCollerTable --> SerializableDictionary
PuyoCollerTable --> PuyoType

PlayerDrop --> PlayerState
PlayerRotate --> PlayerState
PlayerMove --> PlayerState

PlayerState --> PuyoController
PlayerState --> BoardController
PlayerState *- Direction
PlayerState --> WatingPuyos
PlayerState =-> GameManager
WatingPuyos --> PuyoController


@enduml